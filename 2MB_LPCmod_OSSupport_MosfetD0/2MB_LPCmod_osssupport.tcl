
########## Tcl recorder starts at 06/04/14 12:05:04 ##########

set version "1.7"
set proj_dir "C:/workspace/lattice/2MB_LPCmod_OSSSupport"
cd $proj_dir

# Get directory paths
set pver $version
regsub -all {\.} $pver {_} pver
set lscfile "lsc_"
append lscfile $pver ".ini"
set lsvini_dir [lindex [array get env LSC_INI_PATH] 1]
set lsvini_path [file join $lsvini_dir $lscfile]
if {[catch {set fid [open $lsvini_path]} msg]} {
	 puts "File Open Error: $lsvini_path"
	 return false
} else {set data [read $fid]; close $fid }
foreach line [split $data '\n'] { 
	set lline [string tolower $line]
	set lline [string trim $lline]
	if {[string compare $lline "\[paths\]"] == 0} { set path 1; continue}
	if {$path && [regexp {^\[} $lline]} {set path 0; break}
	if {$path && [regexp {^bin} $lline]} {set cpld_bin $line; continue}
	if {$path && [regexp {^fpgapath} $lline]} {set fpga_dir $line; continue}
	if {$path && [regexp {^fpgabinpath} $lline]} {set fpga_bin $line}}

set cpld_bin [string range $cpld_bin [expr [string first "=" $cpld_bin]+1] end]
regsub -all "\"" $cpld_bin "" cpld_bin
set cpld_bin [file join $cpld_bin]
set install_dir [string range $cpld_bin 0 [expr [string first "ispcpld" $cpld_bin]-2]]
regsub -all "\"" $install_dir "" install_dir
set install_dir [file join $install_dir]
set fpga_dir [string range $fpga_dir [expr [string first "=" $fpga_dir]+1] end]
regsub -all "\"" $fpga_dir "" fpga_dir
set fpga_dir [file join $fpga_dir]
set fpga_bin [string range $fpga_bin [expr [string first "=" $fpga_bin]+1] end]
regsub -all "\"" $fpga_bin "" fpga_bin
set fpga_bin [file join $fpga_bin]

if {[string match "*$fpga_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$fpga_bin;$env(PATH)" }

if {[string match "*$cpld_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$cpld_bin;$env(PATH)" }

lappend auto_path [file join $install_dir "ispcpld" "tcltk" "lib" "ispwidget" "runproc"]
package require runcmd

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:05:04 ###########


########## Tcl recorder starts at 06/04/14 12:05:10 ##########

# Commands to make the Process: 
# Optimization Constraint
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:05:10 ###########


########## Tcl recorder starts at 06/04/14 12:05:30 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:05:30 ###########


########## Tcl recorder starts at 06/04/14 12:12:30 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:12:30 ###########


########## Tcl recorder starts at 06/04/14 12:14:39 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:14:39 ###########


########## Tcl recorder starts at 06/04/14 12:14:46 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:14:46 ###########


########## Tcl recorder starts at 06/04/14 12:14:51 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:14:51 ###########


########## Tcl recorder starts at 06/04/14 12:15:01 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:15:01 ###########


########## Tcl recorder starts at 06/04/14 12:15:25 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:15:25 ###########


########## Tcl recorder starts at 06/04/14 12:16:12 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:16:12 ###########


########## Tcl recorder starts at 06/04/14 12:16:26 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/04/14 12:16:26 ###########


########## Tcl recorder starts at 06/17/14 10:39:45 ##########

set version "1.7"
set proj_dir "C:/dev/perso/aladdin_xt_mods/2MB_LPCmod_osssupport"
cd $proj_dir

# Get directory paths
set pver $version
regsub -all {\.} $pver {_} pver
set lscfile "lsc_"
append lscfile $pver ".ini"
set lsvini_dir [lindex [array get env LSC_INI_PATH] 1]
set lsvini_path [file join $lsvini_dir $lscfile]
if {[catch {set fid [open $lsvini_path]} msg]} {
	 puts "File Open Error: $lsvini_path"
	 return false
} else {set data [read $fid]; close $fid }
foreach line [split $data '\n'] { 
	set lline [string tolower $line]
	set lline [string trim $lline]
	if {[string compare $lline "\[paths\]"] == 0} { set path 1; continue}
	if {$path && [regexp {^\[} $lline]} {set path 0; break}
	if {$path && [regexp {^bin} $lline]} {set cpld_bin $line; continue}
	if {$path && [regexp {^fpgapath} $lline]} {set fpga_dir $line; continue}
	if {$path && [regexp {^fpgabinpath} $lline]} {set fpga_bin $line}}

set cpld_bin [string range $cpld_bin [expr [string first "=" $cpld_bin]+1] end]
regsub -all "\"" $cpld_bin "" cpld_bin
set cpld_bin [file join $cpld_bin]
set install_dir [string range $cpld_bin 0 [expr [string first "ispcpld" $cpld_bin]-2]]
regsub -all "\"" $install_dir "" install_dir
set install_dir [file join $install_dir]
set fpga_dir [string range $fpga_dir [expr [string first "=" $fpga_dir]+1] end]
regsub -all "\"" $fpga_dir "" fpga_dir
set fpga_dir [file join $fpga_dir]
set fpga_bin [string range $fpga_bin [expr [string first "=" $fpga_bin]+1] end]
regsub -all "\"" $fpga_bin "" fpga_bin
set fpga_bin [file join $fpga_bin]

if {[string match "*$fpga_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$fpga_bin;$env(PATH)" }

if {[string match "*$cpld_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$cpld_bin;$env(PATH)" }

lappend auto_path [file join $install_dir "ispcpld" "tcltk" "lib" "ispwidget" "runproc"]
package require runcmd

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:39:45 ###########


########## Tcl recorder starts at 06/17/14 10:41:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:41:29 ###########


########## Tcl recorder starts at 06/17/14 10:41:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:41:35 ###########


########## Tcl recorder starts at 06/17/14 10:41:42 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:41:42 ###########


########## Tcl recorder starts at 06/17/14 10:44:53 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:44:53 ###########


########## Tcl recorder starts at 06/17/14 10:45:07 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:45:07 ###########


########## Tcl recorder starts at 06/17/14 10:45:41 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:45:41 ###########


########## Tcl recorder starts at 06/17/14 10:46:52 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:46:52 ###########


########## Tcl recorder starts at 06/17/14 10:50:57 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:50:57 ###########


########## Tcl recorder starts at 06/17/14 10:51:03 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:51:03 ###########


########## Tcl recorder starts at 06/17/14 10:52:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:52:35 ###########


########## Tcl recorder starts at 06/17/14 10:52:44 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:52:44 ###########


########## Tcl recorder starts at 06/17/14 10:53:02 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:53:02 ###########


########## Tcl recorder starts at 06/17/14 10:57:16 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:57:16 ###########


########## Tcl recorder starts at 06/17/14 10:58:15 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:58:15 ###########


########## Tcl recorder starts at 06/17/14 10:59:50 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 10:59:50 ###########


########## Tcl recorder starts at 06/17/14 11:00:02 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 11:00:02 ###########


########## Tcl recorder starts at 06/17/14 11:02:20 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 11:02:20 ###########


########## Tcl recorder starts at 06/17/14 18:11:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:11:29 ###########


########## Tcl recorder starts at 06/17/14 18:12:06 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:12:06 ###########


########## Tcl recorder starts at 06/17/14 18:19:49 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:19:49 ###########


########## Tcl recorder starts at 06/17/14 18:21:12 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:21:12 ###########


########## Tcl recorder starts at 06/17/14 18:23:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:23:00 ###########


########## Tcl recorder starts at 06/17/14 18:23:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:23:10 ###########


########## Tcl recorder starts at 06/17/14 18:23:22 ##########

# Commands to make the Process: 
# Aldec VHDL Timing Simulation
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rss w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rss: $rspFile"
} else {
	puts $rspFile "-i \"2mb_lpcmod_osssupport.tt4\" -lib \"$install_dir/ispcpld/dat/lc4k\" -strategy top -sdfmdl \"$install_dir/ispcpld/dat/sdf.mdl\" -simmdl \"$install_dir/ispcpld/dat/sim.mdl\" -pla \"2mb_lpcmod_osssupport.tt4\" -lci \"2mb_lpcmod_osssupport.lct\" -prj \"2mb_lpcmod_osssupport\" -dir \"$proj_dir\" -err automake.err -log \"2mb_lpcmod_osssupport.nrp\" -exf \"entityLpcMod.exf\"  -netlist vhdl
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/sdf\" \"@2mb_lpcmod_osssupport.rss\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rss
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert -- NOTE: Do not edit this file.
#insert -- Auto generated by Post-Route VHDL Simulation Models
#insert --
#insert -- End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vtd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Models
#insert #
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vatd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Timing Simulation Template: lpcmod_tb_id_vhda.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by Post-Route VHDL Simulation Model
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#do 
#do 2mb_lpcmod_osssupport.vatd
#vcom 2mb_lpcmod_osssupport.vho
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>% -sdfmax %<SimInst>%=2mb_lpcmod_osssupport.sdf
#youdo lpcmod_tb_id_vhda.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.tado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Timing Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.tado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:23:22 ###########


########## Tcl recorder starts at 06/17/14 18:24:17 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:24:17 ###########


########## Tcl recorder starts at 06/17/14 18:29:55 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:29:55 ###########


########## Tcl recorder starts at 06/17/14 18:30:58 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 18:30:58 ###########


########## Tcl recorder starts at 06/17/14 20:00:49 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/17/14 20:00:49 ###########


########## Tcl recorder starts at 07/01/14 08:02:20 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/14 08:02:20 ###########


########## Tcl recorder starts at 07/01/14 08:02:36 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/14 08:02:36 ###########


########## Tcl recorder starts at 07/01/14 08:02:42 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/14 08:02:42 ###########


########## Tcl recorder starts at 08/01/14 10:34:07 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:34:07 ###########


########## Tcl recorder starts at 08/01/14 10:34:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:34:31 ###########


########## Tcl recorder starts at 08/01/14 10:35:17 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:35:17 ###########


########## Tcl recorder starts at 08/01/14 10:36:04 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:36:04 ###########


########## Tcl recorder starts at 08/01/14 10:36:28 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:36:28 ###########


########## Tcl recorder starts at 08/01/14 10:36:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:36:44 ###########


########## Tcl recorder starts at 08/01/14 10:37:22 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:37:22 ###########


########## Tcl recorder starts at 08/01/14 10:37:27 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:37:27 ###########


########## Tcl recorder starts at 08/01/14 10:38:20 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:38:20 ###########


########## Tcl recorder starts at 08/01/14 10:38:25 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:38:25 ###########


########## Tcl recorder starts at 08/01/14 10:40:03 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:40:03 ###########


########## Tcl recorder starts at 08/01/14 10:40:18 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:40:18 ###########


########## Tcl recorder starts at 08/01/14 10:40:59 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:40:59 ###########


########## Tcl recorder starts at 08/01/14 10:41:01 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:41:01 ###########


########## Tcl recorder starts at 08/01/14 10:41:24 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:41:24 ###########


########## Tcl recorder starts at 08/01/14 10:44:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:44:25 ###########


########## Tcl recorder starts at 08/01/14 10:46:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:46:25 ###########


########## Tcl recorder starts at 08/01/14 10:46:29 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:46:29 ###########


########## Tcl recorder starts at 08/01/14 10:46:43 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:46:43 ###########


########## Tcl recorder starts at 08/01/14 10:46:48 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:46:48 ###########


########## Tcl recorder starts at 08/01/14 10:48:27 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:48:27 ###########


########## Tcl recorder starts at 08/01/14 10:49:11 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:49:11 ###########


########## Tcl recorder starts at 08/01/14 10:49:55 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:49:55 ###########


########## Tcl recorder starts at 08/01/14 10:52:28 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:52:28 ###########


########## Tcl recorder starts at 08/01/14 10:52:53 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:52:53 ###########


########## Tcl recorder starts at 08/01/14 10:53:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:53:31 ###########


########## Tcl recorder starts at 08/01/14 10:53:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:53:40 ###########


########## Tcl recorder starts at 08/01/14 10:54:47 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:54:47 ###########


########## Tcl recorder starts at 08/01/14 10:55:08 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:55:08 ###########


########## Tcl recorder starts at 08/01/14 10:55:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:55:16 ###########


########## Tcl recorder starts at 08/01/14 10:57:54 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:57:54 ###########


########## Tcl recorder starts at 08/01/14 10:57:58 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:57:58 ###########


########## Tcl recorder starts at 08/01/14 10:59:22 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:59:22 ###########


########## Tcl recorder starts at 08/01/14 10:59:26 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:59:26 ###########


########## Tcl recorder starts at 08/01/14 10:59:40 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 10:59:40 ###########


########## Tcl recorder starts at 08/01/14 11:01:52 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:01:52 ###########


########## Tcl recorder starts at 08/01/14 11:03:07 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:03:07 ###########


########## Tcl recorder starts at 08/01/14 11:03:55 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:03:55 ###########


########## Tcl recorder starts at 08/01/14 11:05:28 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:05:28 ###########


########## Tcl recorder starts at 08/01/14 11:05:39 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:05:39 ###########


########## Tcl recorder starts at 08/01/14 11:05:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:05:58 ###########


########## Tcl recorder starts at 08/01/14 11:06:02 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:06:02 ###########


########## Tcl recorder starts at 08/01/14 11:06:16 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:06:16 ###########


########## Tcl recorder starts at 08/01/14 11:06:18 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:06:18 ###########


########## Tcl recorder starts at 08/01/14 11:06:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:06:31 ###########


########## Tcl recorder starts at 08/01/14 11:06:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:06:40 ###########


########## Tcl recorder starts at 08/01/14 11:08:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:08:25 ###########


########## Tcl recorder starts at 08/01/14 11:08:38 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:08:38 ###########


########## Tcl recorder starts at 08/01/14 11:09:19 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:09:19 ###########


########## Tcl recorder starts at 08/01/14 11:10:18 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:10:18 ###########


########## Tcl recorder starts at 08/01/14 11:10:25 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:10:25 ###########


########## Tcl recorder starts at 08/01/14 11:11:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:11:00 ###########


########## Tcl recorder starts at 08/01/14 11:11:20 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:11:20 ###########


########## Tcl recorder starts at 08/01/14 11:11:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:11:25 ###########


########## Tcl recorder starts at 08/01/14 11:11:27 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:11:27 ###########


########## Tcl recorder starts at 08/01/14 11:12:09 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:12:09 ###########


########## Tcl recorder starts at 08/01/14 11:13:19 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:13:19 ###########


########## Tcl recorder starts at 08/01/14 11:14:20 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:14:20 ###########


########## Tcl recorder starts at 08/01/14 11:16:07 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 11:16:07 ###########


########## Tcl recorder starts at 08/01/14 13:25:06 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:25:06 ###########


########## Tcl recorder starts at 08/01/14 13:25:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:25:12 ###########


########## Tcl recorder starts at 08/01/14 13:26:08 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:26:08 ###########


########## Tcl recorder starts at 08/01/14 13:26:33 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:26:33 ###########


########## Tcl recorder starts at 08/01/14 13:26:37 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:26:37 ###########


########## Tcl recorder starts at 08/01/14 13:27:08 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:27:08 ###########


########## Tcl recorder starts at 08/01/14 13:34:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:34:00 ###########


########## Tcl recorder starts at 08/01/14 13:34:45 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:34:45 ###########


########## Tcl recorder starts at 08/01/14 13:35:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:35:31 ###########


########## Tcl recorder starts at 08/01/14 13:35:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:35:35 ###########


########## Tcl recorder starts at 08/01/14 13:35:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:35:43 ###########


########## Tcl recorder starts at 08/01/14 13:35:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:35:58 ###########


########## Tcl recorder starts at 08/01/14 13:37:37 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:37:37 ###########


########## Tcl recorder starts at 08/01/14 13:37:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:37:44 ###########


########## Tcl recorder starts at 08/01/14 13:38:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:38:10 ###########


########## Tcl recorder starts at 08/01/14 13:38:55 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:38:55 ###########


########## Tcl recorder starts at 08/01/14 13:38:59 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:38:59 ###########


########## Tcl recorder starts at 08/01/14 13:40:36 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:40:36 ###########


########## Tcl recorder starts at 08/01/14 13:40:51 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:40:51 ###########


########## Tcl recorder starts at 08/01/14 13:40:55 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:40:55 ###########


########## Tcl recorder starts at 08/01/14 13:41:33 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:41:33 ###########


########## Tcl recorder starts at 08/01/14 13:42:04 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:42:04 ###########


########## Tcl recorder starts at 08/01/14 13:42:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:42:10 ###########


########## Tcl recorder starts at 08/01/14 13:42:13 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:42:13 ###########


########## Tcl recorder starts at 08/01/14 13:42:40 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:42:40 ###########


########## Tcl recorder starts at 08/01/14 13:42:48 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:42:48 ###########


########## Tcl recorder starts at 08/01/14 13:44:48 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:44:48 ###########


########## Tcl recorder starts at 08/01/14 13:44:58 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:44:58 ###########


########## Tcl recorder starts at 08/01/14 13:46:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:46:44 ###########


########## Tcl recorder starts at 08/01/14 13:47:15 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:47:15 ###########


########## Tcl recorder starts at 08/01/14 13:48:14 ##########

# Commands to make the Process: 
# Post-Fit Pinouts
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Post-Fit Pinouts
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-src 2mb_lpcmod_osssupport.tt4 -type PLA -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -postfit -lci 2mb_lpcmod_osssupport.lco
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:48:14 ###########


########## Tcl recorder starts at 08/01/14 13:48:23 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:48:23 ###########


########## Tcl recorder starts at 08/01/14 13:49:20 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:49:20 ###########


########## Tcl recorder starts at 08/01/14 13:49:36 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:49:36 ###########


########## Tcl recorder starts at 08/01/14 13:49:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:49:40 ###########


########## Tcl recorder starts at 08/01/14 13:49:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:49:58 ###########


########## Tcl recorder starts at 08/01/14 13:50:02 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:50:02 ###########


########## Tcl recorder starts at 08/01/14 13:50:15 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:50:15 ###########


########## Tcl recorder starts at 08/01/14 13:51:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:51:35 ###########


########## Tcl recorder starts at 08/01/14 13:51:38 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:51:38 ###########


########## Tcl recorder starts at 08/01/14 13:53:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:53:10 ###########


########## Tcl recorder starts at 08/01/14 13:53:14 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:53:14 ###########


########## Tcl recorder starts at 08/01/14 13:54:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:54:31 ###########


########## Tcl recorder starts at 08/01/14 13:54:35 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:54:35 ###########


########## Tcl recorder starts at 08/01/14 13:55:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:55:26 ###########


########## Tcl recorder starts at 08/01/14 13:55:30 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:55:30 ###########


########## Tcl recorder starts at 08/01/14 13:56:37 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:56:37 ###########


########## Tcl recorder starts at 08/01/14 13:56:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:56:40 ###########


########## Tcl recorder starts at 08/01/14 13:56:53 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:56:53 ###########


########## Tcl recorder starts at 08/01/14 13:57:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:57:10 ###########


########## Tcl recorder starts at 08/01/14 13:57:13 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:57:13 ###########


########## Tcl recorder starts at 08/01/14 13:57:25 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:57:25 ###########


########## Tcl recorder starts at 08/01/14 13:57:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:57:42 ###########


########## Tcl recorder starts at 08/01/14 13:59:15 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:59:15 ###########


########## Tcl recorder starts at 08/01/14 13:59:19 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:59:19 ###########


########## Tcl recorder starts at 08/01/14 13:59:32 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:59:32 ###########


########## Tcl recorder starts at 08/01/14 13:59:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:59:42 ###########


########## Tcl recorder starts at 08/01/14 13:59:45 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 13:59:45 ###########


########## Tcl recorder starts at 08/01/14 14:00:02 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:00:02 ###########


########## Tcl recorder starts at 08/01/14 14:04:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:04:26 ###########


########## Tcl recorder starts at 08/01/14 14:05:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:05:25 ###########


########## Tcl recorder starts at 08/01/14 14:05:27 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:05:27 ###########


########## Tcl recorder starts at 08/01/14 14:05:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:05:57 ###########


########## Tcl recorder starts at 08/01/14 14:06:02 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:06:02 ###########


########## Tcl recorder starts at 08/01/14 14:06:37 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/01/14 14:06:37 ###########


########## Tcl recorder starts at 09/08/14 13:07:25 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:07:26 ###########


########## Tcl recorder starts at 09/08/14 13:12:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:12:42 ###########


########## Tcl recorder starts at 09/08/14 13:15:55 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:15:55 ###########


########## Tcl recorder starts at 09/08/14 13:16:08 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:16:08 ###########


########## Tcl recorder starts at 09/08/14 13:28:34 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:28:34 ###########


########## Tcl recorder starts at 09/08/14 13:30:09 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:30:09 ###########


########## Tcl recorder starts at 09/08/14 13:31:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:31:26 ###########


########## Tcl recorder starts at 09/08/14 13:32:48 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:32:48 ###########


########## Tcl recorder starts at 09/08/14 13:33:07 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:33:07 ###########


########## Tcl recorder starts at 09/08/14 13:33:36 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:33:36 ###########


########## Tcl recorder starts at 09/08/14 13:35:49 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:35:49 ###########


########## Tcl recorder starts at 09/08/14 13:36:00 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:36:00 ###########


########## Tcl recorder starts at 09/08/14 13:36:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:36:44 ###########


########## Tcl recorder starts at 09/08/14 13:36:47 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:36:47 ###########


########## Tcl recorder starts at 09/08/14 13:37:09 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:37:09 ###########


########## Tcl recorder starts at 09/08/14 13:37:23 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:37:23 ###########


########## Tcl recorder starts at 09/08/14 13:37:59 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:37:59 ###########


########## Tcl recorder starts at 09/08/14 13:38:04 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:38:04 ###########


########## Tcl recorder starts at 09/08/14 13:38:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:38:35 ###########


########## Tcl recorder starts at 09/08/14 13:38:48 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:38:48 ###########


########## Tcl recorder starts at 09/08/14 13:38:50 ##########

# Commands to make the Process: 
# Optimization Constraint
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:38:50 ###########


########## Tcl recorder starts at 09/08/14 13:39:23 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:39:23 ###########


########## Tcl recorder starts at 09/08/14 13:39:45 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:39:45 ###########


########## Tcl recorder starts at 09/08/14 13:39:53 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:39:53 ###########


########## Tcl recorder starts at 09/08/14 13:40:20 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:40:20 ###########


########## Tcl recorder starts at 09/08/14 13:41:23 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:41:23 ###########


########## Tcl recorder starts at 09/08/14 13:44:24 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:44:24 ###########


########## Tcl recorder starts at 09/08/14 13:44:56 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/08/14 13:44:56 ###########


########## Tcl recorder starts at 12/11/14 16:21:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:21:16 ###########


########## Tcl recorder starts at 12/11/14 16:22:05 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:22:05 ###########


########## Tcl recorder starts at 12/11/14 16:22:28 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:22:28 ###########


########## Tcl recorder starts at 12/11/14 16:23:41 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:23:41 ###########


########## Tcl recorder starts at 12/11/14 16:33:18 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:33:18 ###########


########## Tcl recorder starts at 12/11/14 16:33:19 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:33:19 ###########


########## Tcl recorder starts at 12/11/14 16:35:04 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:35:04 ###########


########## Tcl recorder starts at 12/11/14 16:35:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:35:26 ###########


########## Tcl recorder starts at 12/11/14 16:35:41 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:35:41 ###########


########## Tcl recorder starts at 12/11/14 16:36:40 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:36:40 ###########


########## Tcl recorder starts at 12/11/14 16:36:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:36:40 ###########


########## Tcl recorder starts at 12/11/14 16:37:48 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:37:48 ###########


########## Tcl recorder starts at 12/11/14 16:38:39 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:38:39 ###########


########## Tcl recorder starts at 12/11/14 16:38:44 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:38:44 ###########


########## Tcl recorder starts at 12/11/14 16:39:00 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:39:00 ###########


########## Tcl recorder starts at 12/11/14 16:41:46 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:41:46 ###########


########## Tcl recorder starts at 12/11/14 16:41:47 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:41:47 ###########


########## Tcl recorder starts at 12/11/14 16:42:40 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:42:40 ###########


########## Tcl recorder starts at 12/11/14 16:42:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:42:40 ###########


########## Tcl recorder starts at 12/11/14 16:43:34 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:43:34 ###########


########## Tcl recorder starts at 12/11/14 16:43:34 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:43:34 ###########


########## Tcl recorder starts at 12/11/14 16:44:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:44:56 ###########


########## Tcl recorder starts at 12/11/14 16:44:57 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:44:57 ###########


########## Tcl recorder starts at 12/11/14 16:48:15 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:48:15 ###########


########## Tcl recorder starts at 12/11/14 16:48:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:48:16 ###########


########## Tcl recorder starts at 12/11/14 16:48:52 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:48:52 ###########


########## Tcl recorder starts at 12/11/14 16:48:55 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:48:55 ###########


########## Tcl recorder starts at 12/11/14 16:50:02 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:50:02 ###########


########## Tcl recorder starts at 12/11/14 16:50:03 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:50:03 ###########


########## Tcl recorder starts at 12/11/14 16:50:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:50:26 ###########


########## Tcl recorder starts at 12/11/14 16:50:31 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:50:31 ###########


########## Tcl recorder starts at 12/11/14 16:52:21 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:52:21 ###########


########## Tcl recorder starts at 12/11/14 16:52:21 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:52:22 ###########


########## Tcl recorder starts at 12/11/14 16:56:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:56:42 ###########


########## Tcl recorder starts at 12/11/14 16:56:42 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:56:42 ###########


########## Tcl recorder starts at 12/11/14 16:56:58 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:56:59 ###########


########## Tcl recorder starts at 12/11/14 16:57:18 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:57:18 ###########


########## Tcl recorder starts at 12/11/14 16:57:19 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:57:19 ###########


########## Tcl recorder starts at 12/11/14 16:57:55 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:57:55 ###########


########## Tcl recorder starts at 12/11/14 16:57:56 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 16:57:56 ###########


########## Tcl recorder starts at 12/11/14 17:00:23 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:00:23 ###########


########## Tcl recorder starts at 12/11/14 17:00:23 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:00:23 ###########


########## Tcl recorder starts at 12/11/14 17:00:38 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:00:38 ###########


########## Tcl recorder starts at 12/11/14 17:05:16 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:05:16 ###########


########## Tcl recorder starts at 12/11/14 17:05:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:05:16 ###########


########## Tcl recorder starts at 12/11/14 17:05:45 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:05:45 ###########


########## Tcl recorder starts at 12/11/14 17:05:46 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:05:46 ###########


########## Tcl recorder starts at 12/11/14 17:06:15 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:06:15 ###########


########## Tcl recorder starts at 12/11/14 17:06:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:06:16 ###########


########## Tcl recorder starts at 12/11/14 17:10:07 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:10:07 ###########


########## Tcl recorder starts at 12/11/14 17:10:07 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:10:07 ###########


########## Tcl recorder starts at 12/11/14 17:10:24 ##########

# Commands to make the Process: 
# Fitter Report (Text)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:10:24 ###########


########## Tcl recorder starts at 12/11/14 17:11:30 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:11:30 ###########


########## Tcl recorder starts at 12/11/14 17:11:30 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/11/14 17:11:30 ###########


########## Tcl recorder starts at 09/24/17 00:42:35 ##########

set version "1.7"
set proj_dir "D:/dev/xblast/aladdin_xt_mods/2MB_LPCmod_OSSupport"
cd $proj_dir

# Get directory paths
set pver $version
regsub -all {\.} $pver {_} pver
set lscfile "lsc_"
append lscfile $pver ".ini"
set lsvini_dir [lindex [array get env LSC_INI_PATH] 1]
set lsvini_path [file join $lsvini_dir $lscfile]
if {[catch {set fid [open $lsvini_path]} msg]} {
	 puts "File Open Error: $lsvini_path"
	 return false
} else {set data [read $fid]; close $fid }
foreach line [split $data '\n'] { 
	set lline [string tolower $line]
	set lline [string trim $lline]
	if {[string compare $lline "\[paths\]"] == 0} { set path 1; continue}
	if {$path && [regexp {^\[} $lline]} {set path 0; break}
	if {$path && [regexp {^bin} $lline]} {set cpld_bin $line; continue}
	if {$path && [regexp {^fpgapath} $lline]} {set fpga_dir $line; continue}
	if {$path && [regexp {^fpgabinpath} $lline]} {set fpga_bin $line}}

set cpld_bin [string range $cpld_bin [expr [string first "=" $cpld_bin]+1] end]
regsub -all "\"" $cpld_bin "" cpld_bin
set cpld_bin [file join $cpld_bin]
set install_dir [string range $cpld_bin 0 [expr [string first "ispcpld" $cpld_bin]-2]]
regsub -all "\"" $install_dir "" install_dir
set install_dir [file join $install_dir]
set fpga_dir [string range $fpga_dir [expr [string first "=" $fpga_dir]+1] end]
regsub -all "\"" $fpga_dir "" fpga_dir
set fpga_dir [file join $fpga_dir]
set fpga_bin [string range $fpga_bin [expr [string first "=" $fpga_bin]+1] end]
regsub -all "\"" $fpga_bin "" fpga_bin
set fpga_bin [file join $fpga_bin]

if {[string match "*$fpga_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$fpga_bin;$env(PATH)" }

if {[string match "*$cpld_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$cpld_bin;$env(PATH)" }

lappend auto_path [file join $install_dir "ispcpld" "tcltk" "lib" "ispwidget" "runproc"]
package require runcmd

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:42:35 ###########


########## Tcl recorder starts at 09/24/17 00:43:20 ##########

# Commands to make the Process: 
# Generate Schematic Symbol
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/naf2sym\" entityLpcMod"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:43:20 ###########


########## Tcl recorder starts at 09/24/17 00:44:46 ##########

# Commands to make the Process: 
# Compile EDIF File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:44:46 ###########


########## Tcl recorder starts at 09/24/17 00:56:35 ##########

# Commands to make the Process: 
# Generate Schematic Symbol
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/naf2sym\" entityLpcMod"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:56:35 ###########


########## Tcl recorder starts at 09/24/17 00:57:58 ##########

# Commands to make the Process: 
# Hierarchy Browser
# - none -
# Application to view the Process: 
# Hierarchy Browser
if [runCmd "\"$cpld_bin/hierbro\" 2mb_lpcmod_osssupport.jid  entityLpcMod"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:57:58 ###########


########## Tcl recorder starts at 09/24/17 00:58:16 ##########

# Commands to make the Process: 
# Synplify Synthesize VHDL File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd

########## Tcl recorder end at 09/24/17 00:58:16 ###########


########## Tcl recorder starts at 09/24/17 00:59:50 ##########

# Commands to make the Process: 
# Compile EDIF File
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 09/24/17 00:59:50 ###########


########## Tcl recorder starts at 12/27/18 08:54:31 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/27/18 08:54:31 ###########


########## Tcl recorder starts at 12/27/18 08:54:43 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/27/18 08:54:43 ###########


########## Tcl recorder starts at 12/27/18 09:27:38 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/27/18 09:27:38 ###########


########## Tcl recorder starts at 12/27/18 22:40:59 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/27/18 22:40:59 ###########


########## Tcl recorder starts at 12/27/18 22:42:04 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/27/18 22:42:04 ###########


########## Tcl recorder starts at 12/28/18 07:49:09 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/28/18 07:49:09 ###########


########## Tcl recorder starts at 12/28/18 07:49:15 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 12/28/18 07:49:15 ###########


########## Tcl recorder starts at 06/14/19 18:59:04 ##########

# Commands to make the Process: 
# Timing Analysis
# - none -
# Application to view the Process: 
# Timing Analysis
if [runCmd "\"$cpld_bin/timing\" -prj \"2mb_lpcmod_osssupport\" -tti \"2mb_lpcmod_osssupport.tt4\" -gui -dir \"$proj_dir\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 18:59:04 ###########


########## Tcl recorder starts at 06/14/19 18:59:11 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 18:59:11 ###########


########## Tcl recorder starts at 06/14/19 19:10:01 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 19:10:01 ###########


########## Tcl recorder starts at 06/14/19 19:10:17 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 19:10:17 ###########


########## Tcl recorder starts at 06/14/19 20:30:01 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 20:30:01 ###########


########## Tcl recorder starts at 06/14/19 20:30:27 ##########

# Commands to make the Process: 
# Fit Design
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 20:30:27 ###########


########## Tcl recorder starts at 06/14/19 20:30:38 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/14/19 20:30:38 ###########


########## Tcl recorder starts at 06/29/19 00:23:58 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 00:23:58 ###########


########## Tcl recorder starts at 06/29/19 00:24:28 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 00:24:28 ###########


########## Tcl recorder starts at 06/29/19 00:47:57 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 00:47:57 ###########


########## Tcl recorder starts at 06/29/19 01:12:09 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:12:09 ###########


########## Tcl recorder starts at 06/29/19 01:12:10 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entityLpcMod.cmd w} rspFile] {
	puts stderr "Cannot create response file entityLpcMod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entityLpcMod
WORKING_PATH: \"$proj_dir\"
MODULE: entityLpcMod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entityLpcMod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entityLpcMod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entityLpcMod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entityLpcMod.edi -out entityLpcMod.bl0 -err automake.err -log entityLpcMod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entityLpcMod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entityLpcMod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entityLpcMod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entityLpcMod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:12:10 ###########


########## Tcl recorder starts at 06/29/19 01:20:23 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:20:23 ###########


########## Tcl recorder starts at 06/29/19 01:20:24 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:20:24 ###########


########## Tcl recorder starts at 06/29/19 01:35:59 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:35:59 ###########


########## Tcl recorder starts at 06/29/19 01:35:59 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 01:35:59 ###########


########## Tcl recorder starts at 06/29/19 02:30:23 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:30:23 ###########


########## Tcl recorder starts at 06/29/19 02:30:24 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:30:24 ###########


########## Tcl recorder starts at 06/29/19 02:31:41 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:31:41 ###########


########## Tcl recorder starts at 06/29/19 02:51:10 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:51:10 ###########


########## Tcl recorder starts at 06/29/19 02:51:11 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:51:11 ###########


########## Tcl recorder starts at 06/29/19 02:52:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:52:29 ###########


########## Tcl recorder starts at 06/29/19 02:52:30 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 02:52:30 ###########


########## Tcl recorder starts at 06/29/19 12:16:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:16:41 ###########


########## Tcl recorder starts at 06/29/19 12:16:42 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:16:42 ###########


########## Tcl recorder starts at 06/29/19 12:16:51 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:16:51 ###########


########## Tcl recorder starts at 06/29/19 12:17:15 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:17:15 ###########


########## Tcl recorder starts at 06/29/19 12:38:21 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:38:21 ###########


########## Tcl recorder starts at 06/29/19 12:38:38 ##########

# Commands to make the Process: 
# Optimization Constraint
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:38:38 ###########


########## Tcl recorder starts at 06/29/19 12:39:26 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:39:26 ###########


########## Tcl recorder starts at 06/29/19 12:39:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:39:58 ###########


########## Tcl recorder starts at 06/29/19 12:39:58 ##########

# Commands to make the Process: 
# Constraint Editor
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:39:58 ###########


########## Tcl recorder starts at 06/29/19 12:48:52 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 12:48:52 ###########


########## Tcl recorder starts at 06/29/19 13:37:25 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:37:25 ###########


########## Tcl recorder starts at 06/29/19 13:39:56 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:39:56 ###########


########## Tcl recorder starts at 06/29/19 13:40:38 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:40:38 ###########


########## Tcl recorder starts at 06/29/19 13:42:09 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:42:09 ###########


########## Tcl recorder starts at 06/29/19 13:47:06 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:47:06 ###########


########## Tcl recorder starts at 06/29/19 13:47:07 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:47:07 ###########


########## Tcl recorder starts at 06/29/19 13:47:46 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:47:46 ###########


########## Tcl recorder starts at 06/29/19 13:47:47 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:47:47 ###########


########## Tcl recorder starts at 06/29/19 13:49:21 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:49:21 ###########


########## Tcl recorder starts at 06/29/19 13:49:21 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:49:21 ###########


########## Tcl recorder starts at 06/29/19 13:50:23 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:50:23 ###########


########## Tcl recorder starts at 06/29/19 13:50:24 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:50:24 ###########


########## Tcl recorder starts at 06/29/19 13:50:39 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:50:39 ###########


########## Tcl recorder starts at 06/29/19 13:52:08 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:52:08 ###########


########## Tcl recorder starts at 06/29/19 13:52:08 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:52:08 ###########


########## Tcl recorder starts at 06/29/19 13:53:20 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:53:20 ###########


########## Tcl recorder starts at 06/29/19 13:53:20 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:53:20 ###########


########## Tcl recorder starts at 06/29/19 13:54:10 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:54:10 ###########


########## Tcl recorder starts at 06/29/19 13:54:53 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:54:53 ###########


########## Tcl recorder starts at 06/29/19 13:54:58 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:54:58 ###########


########## Tcl recorder starts at 06/29/19 13:55:04 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:55:04 ###########


########## Tcl recorder starts at 06/29/19 13:58:06 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:58:06 ###########


########## Tcl recorder starts at 06/29/19 13:58:07 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 13:58:07 ###########


########## Tcl recorder starts at 06/29/19 14:03:01 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:03:01 ###########


########## Tcl recorder starts at 06/29/19 14:03:01 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:03:01 ###########


########## Tcl recorder starts at 06/29/19 14:03:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:03:42 ###########


########## Tcl recorder starts at 06/29/19 14:03:43 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:03:43 ###########


########## Tcl recorder starts at 06/29/19 14:04:53 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:04:53 ###########


########## Tcl recorder starts at 06/29/19 14:05:47 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:05:47 ###########


########## Tcl recorder starts at 06/29/19 14:05:52 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:05:52 ###########


########## Tcl recorder starts at 06/29/19 14:05:57 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:05:57 ###########


########## Tcl recorder starts at 06/29/19 14:06:04 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 14:06:04 ###########


########## Tcl recorder starts at 06/29/19 23:55:39 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:55:39 ###########


########## Tcl recorder starts at 06/29/19 23:55:40 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:55:40 ###########


########## Tcl recorder starts at 06/29/19 23:57:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:57:35 ###########


########## Tcl recorder starts at 06/29/19 23:57:36 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:57:36 ###########


########## Tcl recorder starts at 06/29/19 23:58:13 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:58:13 ###########


########## Tcl recorder starts at 06/29/19 23:58:49 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:58:49 ###########


########## Tcl recorder starts at 06/29/19 23:59:22 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/29/19 23:59:22 ###########


########## Tcl recorder starts at 06/30/19 00:18:12 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 00:18:12 ###########


########## Tcl recorder starts at 06/30/19 00:19:06 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 00:19:06 ###########


########## Tcl recorder starts at 06/30/19 00:20:55 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 00:20:55 ###########


########## Tcl recorder starts at 06/30/19 10:42:17 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:42:17 ###########


########## Tcl recorder starts at 06/30/19 10:43:04 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:43:04 ###########


########## Tcl recorder starts at 06/30/19 10:44:09 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:44:09 ###########


########## Tcl recorder starts at 06/30/19 10:45:16 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:45:16 ###########


########## Tcl recorder starts at 06/30/19 10:45:39 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:45:39 ###########


########## Tcl recorder starts at 06/30/19 10:47:10 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 10:47:10 ###########


########## Tcl recorder starts at 06/30/19 11:49:33 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 11:49:33 ###########


########## Tcl recorder starts at 06/30/19 11:49:42 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 11:49:42 ###########


########## Tcl recorder starts at 06/30/19 11:49:58 ##########

# Commands to make the Process: 
# Constraint Editor
# - none -
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 11:49:58 ###########


########## Tcl recorder starts at 06/30/19 11:54:49 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 11:54:49 ###########


########## Tcl recorder starts at 06/30/19 11:59:25 ##########

# Commands to make the Process: 
# Fit Design
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 11:59:25 ###########


########## Tcl recorder starts at 06/30/19 12:16:33 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:16:33 ###########


########## Tcl recorder starts at 06/30/19 12:19:10 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:19:10 ###########


########## Tcl recorder starts at 06/30/19 12:20:08 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:20:08 ###########


########## Tcl recorder starts at 06/30/19 12:22:41 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:22:41 ###########


########## Tcl recorder starts at 06/30/19 12:22:53 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:22:53 ###########


########## Tcl recorder starts at 06/30/19 12:58:40 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:58:40 ###########


########## Tcl recorder starts at 06/30/19 12:59:01 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 12:59:01 ###########


########## Tcl recorder starts at 06/30/19 13:04:28 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:04:28 ###########


########## Tcl recorder starts at 06/30/19 13:04:48 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:04:48 ###########


########## Tcl recorder starts at 06/30/19 13:06:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:06:44 ###########


########## Tcl recorder starts at 06/30/19 13:06:55 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:06:55 ###########


########## Tcl recorder starts at 06/30/19 13:07:03 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:07:03 ###########


########## Tcl recorder starts at 06/30/19 13:15:49 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:15:49 ###########


########## Tcl recorder starts at 06/30/19 13:16:03 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:16:03 ###########


########## Tcl recorder starts at 06/30/19 13:16:27 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:16:27 ###########


########## Tcl recorder starts at 06/30/19 13:16:30 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:16:30 ###########


########## Tcl recorder starts at 06/30/19 13:16:37 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:16:37 ###########


########## Tcl recorder starts at 06/30/19 13:21:58 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:21:58 ###########


########## Tcl recorder starts at 06/30/19 13:22:31 ##########

# Commands to make the Process: 
# Fit Design
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:22:31 ###########


########## Tcl recorder starts at 06/30/19 13:22:35 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:22:35 ###########


########## Tcl recorder starts at 06/30/19 13:22:41 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:22:41 ###########


########## Tcl recorder starts at 06/30/19 13:23:29 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 13:23:29 ###########


########## Tcl recorder starts at 06/30/19 14:50:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:50:35 ###########


########## Tcl recorder starts at 06/30/19 14:50:38 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:50:38 ###########


########## Tcl recorder starts at 06/30/19 14:51:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:51:58 ###########


########## Tcl recorder starts at 06/30/19 14:54:30 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:54:30 ###########


########## Tcl recorder starts at 06/30/19 14:54:40 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:54:40 ###########


########## Tcl recorder starts at 06/30/19 14:55:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:55:41 ###########


########## Tcl recorder starts at 06/30/19 14:55:44 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:55:44 ###########


########## Tcl recorder starts at 06/30/19 14:57:58 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:57:58 ###########


########## Tcl recorder starts at 06/30/19 14:58:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:58:42 ###########


########## Tcl recorder starts at 06/30/19 14:58:46 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:58:46 ###########


########## Tcl recorder starts at 06/30/19 14:58:51 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:58:51 ###########


########## Tcl recorder starts at 06/30/19 14:59:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:59:00 ###########


########## Tcl recorder starts at 06/30/19 14:59:02 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 14:59:02 ###########


########## Tcl recorder starts at 06/30/19 15:02:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:02:26 ###########


########## Tcl recorder starts at 06/30/19 15:02:31 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:02:31 ###########


########## Tcl recorder starts at 06/30/19 15:03:19 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:03:19 ###########


########## Tcl recorder starts at 06/30/19 15:03:23 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:03:23 ###########


########## Tcl recorder starts at 06/30/19 15:13:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:13:31 ###########


########## Tcl recorder starts at 06/30/19 15:13:38 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:13:38 ###########


########## Tcl recorder starts at 06/30/19 15:17:22 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:17:22 ###########


########## Tcl recorder starts at 06/30/19 15:17:23 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:17:23 ###########


########## Tcl recorder starts at 06/30/19 15:28:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:28:58 ###########


########## Tcl recorder starts at 06/30/19 15:28:59 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:28:59 ###########


########## Tcl recorder starts at 06/30/19 15:41:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:41:12 ###########


########## Tcl recorder starts at 06/30/19 15:41:17 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:41:17 ###########


########## Tcl recorder starts at 06/30/19 15:44:01 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:44:01 ###########


########## Tcl recorder starts at 06/30/19 15:44:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:44:13 ###########


########## Tcl recorder starts at 06/30/19 15:44:16 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 15:44:16 ###########


########## Tcl recorder starts at 06/30/19 16:07:09 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:07:09 ###########


########## Tcl recorder starts at 06/30/19 16:07:10 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:07:10 ###########


########## Tcl recorder starts at 06/30/19 16:07:46 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:07:46 ###########


########## Tcl recorder starts at 06/30/19 16:07:53 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:07:53 ###########


########## Tcl recorder starts at 06/30/19 16:11:49 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:11:49 ###########


########## Tcl recorder starts at 06/30/19 16:11:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 16:11:57 ###########


########## Tcl recorder starts at 06/30/19 17:03:15 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:03:15 ###########


########## Tcl recorder starts at 06/30/19 17:03:16 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:03:16 ###########


########## Tcl recorder starts at 06/30/19 17:04:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:04:12 ###########


########## Tcl recorder starts at 06/30/19 17:30:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:30:44 ###########


########## Tcl recorder starts at 06/30/19 17:30:45 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:30:45 ###########


########## Tcl recorder starts at 06/30/19 17:36:04 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:36:04 ###########


########## Tcl recorder starts at 06/30/19 17:36:05 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:36:05 ###########


########## Tcl recorder starts at 06/30/19 17:45:49 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:45:49 ###########


########## Tcl recorder starts at 06/30/19 17:45:50 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:45:50 ###########


########## Tcl recorder starts at 06/30/19 17:59:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:59:56 ###########


########## Tcl recorder starts at 06/30/19 17:59:56 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 17:59:56 ###########


########## Tcl recorder starts at 06/30/19 18:20:03 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:20:03 ###########


########## Tcl recorder starts at 06/30/19 18:20:04 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:20:04 ###########


########## Tcl recorder starts at 06/30/19 18:21:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:21:41 ###########


########## Tcl recorder starts at 06/30/19 18:21:41 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:21:41 ###########


########## Tcl recorder starts at 06/30/19 18:52:53 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:52:53 ###########


########## Tcl recorder starts at 06/30/19 18:52:54 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:52:54 ###########


########## Tcl recorder starts at 06/30/19 18:54:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:54:31 ###########


########## Tcl recorder starts at 06/30/19 18:54:32 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:54:32 ###########


########## Tcl recorder starts at 06/30/19 18:55:38 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:55:38 ###########


########## Tcl recorder starts at 06/30/19 18:55:39 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:55:39 ###########


########## Tcl recorder starts at 06/30/19 18:56:22 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:56:22 ###########


########## Tcl recorder starts at 06/30/19 18:56:23 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:56:23 ###########


########## Tcl recorder starts at 06/30/19 18:57:04 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:57:04 ###########


########## Tcl recorder starts at 06/30/19 18:57:28 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:57:28 ###########


########## Tcl recorder starts at 06/30/19 18:57:48 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:57:48 ###########


########## Tcl recorder starts at 06/30/19 18:58:04 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:58:04 ###########


########## Tcl recorder starts at 06/30/19 18:59:33 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:59:33 ###########


########## Tcl recorder starts at 06/30/19 18:59:46 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:59:46 ###########


########## Tcl recorder starts at 06/30/19 18:59:55 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 18:59:55 ###########


########## Tcl recorder starts at 06/30/19 19:00:02 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:02 ###########


########## Tcl recorder starts at 06/30/19 19:00:09 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:09 ###########


########## Tcl recorder starts at 06/30/19 19:00:14 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:14 ###########


########## Tcl recorder starts at 06/30/19 19:00:26 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:26 ###########


########## Tcl recorder starts at 06/30/19 19:00:36 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:36 ###########


########## Tcl recorder starts at 06/30/19 19:00:45 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:00:45 ###########


########## Tcl recorder starts at 06/30/19 19:01:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:01:35 ###########


########## Tcl recorder starts at 06/30/19 19:01:36 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:01:36 ###########


########## Tcl recorder starts at 06/30/19 19:02:21 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:02:21 ###########


########## Tcl recorder starts at 06/30/19 19:07:28 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:07:28 ###########


########## Tcl recorder starts at 06/30/19 19:07:29 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:07:29 ###########


########## Tcl recorder starts at 06/30/19 19:08:20 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:08:20 ###########


########## Tcl recorder starts at 06/30/19 19:14:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:14:12 ###########


########## Tcl recorder starts at 06/30/19 19:14:13 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:14:13 ###########


########## Tcl recorder starts at 06/30/19 19:15:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:15:29 ###########


########## Tcl recorder starts at 06/30/19 19:15:30 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:15:30 ###########


########## Tcl recorder starts at 06/30/19 19:40:35 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:40:35 ###########


########## Tcl recorder starts at 06/30/19 19:40:36 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:40:36 ###########


########## Tcl recorder starts at 06/30/19 19:42:54 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:42:54 ###########


########## Tcl recorder starts at 06/30/19 19:43:38 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:43:38 ###########


########## Tcl recorder starts at 06/30/19 19:44:23 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:44:23 ###########


########## Tcl recorder starts at 06/30/19 19:44:50 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:44:50 ###########


########## Tcl recorder starts at 06/30/19 19:45:18 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:45:18 ###########


########## Tcl recorder starts at 06/30/19 19:45:46 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:45:46 ###########


########## Tcl recorder starts at 06/30/19 19:52:30 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:52:30 ###########


########## Tcl recorder starts at 06/30/19 19:55:07 ##########

# Commands to make the Process: 
# Fit Design
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:55:07 ###########


########## Tcl recorder starts at 06/30/19 19:55:36 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:55:36 ###########


########## Tcl recorder starts at 06/30/19 19:56:36 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:56:36 ###########


########## Tcl recorder starts at 06/30/19 19:56:59 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:56:59 ###########


########## Tcl recorder starts at 06/30/19 19:57:18 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:57:19 ###########


########## Tcl recorder starts at 06/30/19 19:57:42 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:57:43 ###########


########## Tcl recorder starts at 06/30/19 19:58:39 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:58:39 ###########


########## Tcl recorder starts at 06/30/19 19:59:57 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 19:59:57 ###########


########## Tcl recorder starts at 06/30/19 20:00:10 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:00:10 ###########


########## Tcl recorder starts at 06/30/19 20:02:52 ##########

# Commands to make the Process: 
# Constraint Editor
if [runCmd "\"$cpld_bin/blifstat\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.sif"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
# Application to view the Process: 
# Constraint Editor
if [catch {open lattice_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file lattice_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-nodal -src 2mb_lpcmod_osssupport.bl5 -type BLIF -presrc 2mb_lpcmod_osssupport.bl3 -crf 2mb_lpcmod_osssupport.crf -sif 2mb_lpcmod_osssupport.sif -devfile \"$install_dir/ispcpld/dat/lc4k/m4s_32_30.dev\" -lci 2mb_lpcmod_osssupport.lct
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lciedit\" @lattice_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:02:52 ###########


########## Tcl recorder starts at 06/30/19 20:07:13 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:07:13 ###########


########## Tcl recorder starts at 06/30/19 20:07:14 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:07:14 ###########


########## Tcl recorder starts at 06/30/19 20:08:16 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:08:16 ###########


########## Tcl recorder starts at 06/30/19 20:08:18 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 20:08:18 ###########


########## Tcl recorder starts at 06/30/19 21:23:30 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 21:23:30 ###########


########## Tcl recorder starts at 06/30/19 21:23:31 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 21:23:31 ###########


########## Tcl recorder starts at 06/30/19 22:51:43 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 22:51:43 ###########


########## Tcl recorder starts at 06/30/19 22:52:40 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 22:52:40 ###########


########## Tcl recorder starts at 06/30/19 23:47:39 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 06/30/19 23:47:39 ###########


########## Tcl recorder starts at 07/01/19 00:21:06 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 00:21:06 ###########


########## Tcl recorder starts at 07/01/19 01:49:37 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 01:49:37 ###########


########## Tcl recorder starts at 07/01/19 01:49:38 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 01:49:38 ###########


########## Tcl recorder starts at 07/01/19 01:58:45 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 01:58:45 ###########


########## Tcl recorder starts at 07/01/19 03:34:21 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:34:21 ###########


########## Tcl recorder starts at 07/01/19 03:36:31 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:36:31 ###########


########## Tcl recorder starts at 07/01/19 03:37:15 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:37:16 ###########


########## Tcl recorder starts at 07/01/19 03:51:33 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:51:33 ###########


########## Tcl recorder starts at 07/01/19 03:51:34 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:51:34 ###########


########## Tcl recorder starts at 07/01/19 03:52:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:52:25 ###########


########## Tcl recorder starts at 07/01/19 03:52:26 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:52:26 ###########


########## Tcl recorder starts at 07/01/19 03:54:07 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:54:07 ###########


########## Tcl recorder starts at 07/01/19 03:54:07 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:54:07 ###########


########## Tcl recorder starts at 07/01/19 03:55:05 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:55:05 ###########


########## Tcl recorder starts at 07/01/19 03:55:05 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 03:55:05 ###########


########## Tcl recorder starts at 07/01/19 04:09:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:09:58 ###########


########## Tcl recorder starts at 07/01/19 04:09:58 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:09:59 ###########


########## Tcl recorder starts at 07/01/19 04:11:09 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:11:09 ###########


########## Tcl recorder starts at 07/01/19 04:11:10 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:11:10 ###########


########## Tcl recorder starts at 07/01/19 04:12:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:12:00 ###########


########## Tcl recorder starts at 07/01/19 04:12:01 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:12:01 ###########


########## Tcl recorder starts at 07/01/19 04:12:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:12:56 ###########


########## Tcl recorder starts at 07/01/19 04:12:56 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:12:56 ###########


########## Tcl recorder starts at 07/01/19 04:13:51 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:13:51 ###########


########## Tcl recorder starts at 07/01/19 04:13:51 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:13:51 ###########


########## Tcl recorder starts at 07/01/19 04:14:27 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 04:14:27 ###########


########## Tcl recorder starts at 07/01/19 13:07:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:07:41 ###########


########## Tcl recorder starts at 07/01/19 13:07:42 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:07:42 ###########


########## Tcl recorder starts at 07/01/19 13:09:25 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:09:25 ###########


########## Tcl recorder starts at 07/01/19 13:09:25 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:09:25 ###########


########## Tcl recorder starts at 07/01/19 13:10:57 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:10:57 ###########


########## Tcl recorder starts at 07/01/19 13:10:58 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:10:58 ###########


########## Tcl recorder starts at 07/01/19 13:34:05 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:34:05 ###########


########## Tcl recorder starts at 07/01/19 13:34:13 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 13:34:13 ###########


########## Tcl recorder starts at 07/01/19 18:26:57 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 18:26:57 ###########


########## Tcl recorder starts at 07/01/19 18:26:57 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 18:26:57 ###########


########## Tcl recorder starts at 07/01/19 19:53:39 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 19:53:39 ###########


########## Tcl recorder starts at 07/01/19 19:53:40 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 19:53:40 ###########


########## Tcl recorder starts at 07/01/19 19:54:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 19:54:29 ###########


########## Tcl recorder starts at 07/01/19 19:54:29 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 19:54:29 ###########


########## Tcl recorder starts at 07/01/19 20:03:01 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:03:01 ###########


########## Tcl recorder starts at 07/01/19 20:03:12 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:03:12 ###########


########## Tcl recorder starts at 07/01/19 20:03:27 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:03:27 ###########


########## Tcl recorder starts at 07/01/19 20:03:31 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:03:31 ###########


########## Tcl recorder starts at 07/01/19 20:05:57 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:05:57 ###########


########## Tcl recorder starts at 07/01/19 20:05:58 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:05:58 ###########


########## Tcl recorder starts at 07/01/19 20:06:47 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:06:47 ###########


########## Tcl recorder starts at 07/01/19 20:06:55 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:06:55 ###########


########## Tcl recorder starts at 07/01/19 20:10:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:10:00 ###########


########## Tcl recorder starts at 07/01/19 20:10:36 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:10:36 ###########


########## Tcl recorder starts at 07/01/19 20:10:42 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:10:42 ###########


########## Tcl recorder starts at 07/01/19 20:10:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:10:44 ###########


########## Tcl recorder starts at 07/01/19 20:10:56 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:10:56 ###########


########## Tcl recorder starts at 07/01/19 20:16:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:16:26 ###########


########## Tcl recorder starts at 07/01/19 20:16:33 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:16:33 ###########


########## Tcl recorder starts at 07/01/19 20:16:37 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:16:37 ###########


########## Tcl recorder starts at 07/01/19 20:17:14 ##########

# Commands to make the Process: 
# Fitter Report (HTML)
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:17:14 ###########


########## Tcl recorder starts at 07/01/19 20:26:16 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:26:16 ###########


########## Tcl recorder starts at 07/01/19 20:26:16 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:26:16 ###########


########## Tcl recorder starts at 07/01/19 20:29:54 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:29:55 ###########


########## Tcl recorder starts at 07/01/19 20:29:58 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 20:29:58 ###########


########## Tcl recorder starts at 07/01/19 21:38:54 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 21:38:54 ###########


########## Tcl recorder starts at 07/01/19 21:38:54 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/01/19 21:38:54 ###########


########## Tcl recorder starts at 07/02/19 22:26:44 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/02/19 22:26:44 ###########


########## Tcl recorder starts at 07/02/19 22:26:45 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/02/19 22:26:45 ###########


########## Tcl recorder starts at 07/02/19 23:19:41 ##########

# Commands to make the Process: 
# Pre-Fit Equations
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/blif2eqn\" 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.eq2 -use_short -err automake.err"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/02/19 23:19:41 ###########


########## Tcl recorder starts at 07/02/19 23:20:20 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/02/19 23:20:20 ###########


########## Tcl recorder starts at 07/03/19 21:48:50 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/03/19 21:48:50 ###########


########## Tcl recorder starts at 07/03/19 21:48:51 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/03/19 21:48:51 ###########


########## Tcl recorder starts at 07/04/19 22:44:55 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/04/19 22:44:55 ###########


########## Tcl recorder starts at 07/04/19 22:44:56 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/04/19 22:44:56 ###########


########## Tcl recorder starts at 07/07/19 12:34:13 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/07/19 12:34:13 ###########


########## Tcl recorder starts at 07/07/19 12:34:14 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/07/19 12:34:14 ###########


########## Tcl recorder starts at 07/07/19 12:34:56 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/07/19 12:34:56 ###########


########## Tcl recorder starts at 07/07/19 12:34:59 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/07/19 12:34:59 ###########


########## Tcl recorder starts at 07/12/19 19:27:24 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/12/19 19:27:24 ###########


########## Tcl recorder starts at 07/12/19 19:28:02 ##########

# Commands to make the Process: 
# Optimization Constraint
# - none -
# Application to view the Process: 
# Optimization Constraint
if [catch {open opt_cmd.rs2 w} rspFile] {
	puts stderr "Cannot create response file opt_cmd.rs2: $rspFile"
} else {
	puts $rspFile "-global -lci 2mb_lpcmod_osssupport.lct -touch 2mb_lpcmod_osssupport.imp
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/optedit\" @opt_cmd.rs2"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/12/19 19:28:02 ###########


########## Tcl recorder starts at 07/12/19 19:28:08 ##########

# Commands to make the Process: 
# Fit Design
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/12/19 19:28:08 ###########


########## Tcl recorder starts at 07/19/19 22:46:07 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entityLpcMod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 22:46:07 ###########


########## Tcl recorder starts at 07/19/19 23:48:41 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 23:48:41 ###########


########## Tcl recorder starts at 07/19/19 23:49:12 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 23:49:12 ###########


########## Tcl recorder starts at 07/19/19 23:52:16 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 23:52:16 ###########


########## Tcl recorder starts at 07/19/19 23:53:29 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 23:53:29 ###########


########## Tcl recorder starts at 07/19/19 23:56:05 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/19/19 23:56:05 ###########


########## Tcl recorder starts at 07/20/19 00:00:28 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 00:00:28 ###########


########## Tcl recorder starts at 07/20/19 00:12:48 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 00:12:48 ###########


########## Tcl recorder starts at 07/20/19 00:16:37 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 00:16:37 ###########


########## Tcl recorder starts at 07/20/19 09:28:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 09:28:00 ###########


########## Tcl recorder starts at 07/20/19 09:28:00 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 09:28:00 ###########


########## Tcl recorder starts at 07/20/19 09:32:17 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 09:32:17 ###########


########## Tcl recorder starts at 07/20/19 10:23:24 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 10:23:24 ###########


########## Tcl recorder starts at 07/20/19 10:44:22 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 10:44:22 ###########


########## Tcl recorder starts at 07/20/19 18:10:48 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/20/19 18:10:48 ###########


########## Tcl recorder starts at 07/22/19 18:30:07 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/22/19 18:30:07 ###########


########## Tcl recorder starts at 07/22/19 18:30:07 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/22/19 18:30:07 ###########


########## Tcl recorder starts at 07/22/19 19:23:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/22/19 19:23:16 ###########


########## Tcl recorder starts at 07/22/19 22:26:16 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/22/19 22:26:16 ###########


########## Tcl recorder starts at 07/25/19 16:32:23 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by All VHDL Functional Simulation Models
#insert #
#path
#do 
#vcomSrc   2mb_lpcmod.vhd
#insert # End
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rsp w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rsp: $rspFile"
} else {
	puts $rspFile "#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" 2mb_lpcmod_osssupport.rsp 2mb_lpcmod_osssupport.vafd none"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rsp
file delete 2mb_lpcmod_osssupport.rsp
if [catch {open udo.rsp w} rspFile] {
	puts stderr "Cannot create response file udo.rsp: $rspFile"
} else {
	puts $rspFile "# ispDesignExpert VHDL Functional Simulation Template: lpcmod_tb_id_vhdaf.udo.
# You may edit this file to control your simulation.
# You may specify your design unit.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open lpcmod_tb_id.rsp w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id.rsp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#path
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo 2mb_lpcmod_osssupport.sty
#do 
#vcomSrc   2mb_lpcmod.vhd
#vcom lpcmod_tb_id.vhd
#stimulus vhdl entity_lpcmod lpcmod_tb_id.vhd
#insert vsim +access +r %<StimModule>%
#youdo lpcmod_tb_id_vhdaf.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" lpcmod_tb_id.rsp lpcmod_tb_id.fado udo.rsp"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo.rsp
file delete lpcmod_tb_id.rsp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/25/19 16:32:23 ###########


########## Tcl recorder starts at 07/25/19 16:32:55 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open lpcmod_tb_id_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file lpcmod_tb_id_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl lpcmod_tb_id.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"lpcmod_tb_id_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 07/25/19 16:32:55 ###########


########## Tcl recorder starts at 08/10/19 12:20:25 ##########

# Commands to make the Process: 
# Fit Design
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/10/19 12:20:25 ###########


########## Tcl recorder starts at 08/10/19 12:23:54 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/10/19 12:23:54 ###########


########## Tcl recorder starts at 08/10/19 14:46:55 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 08/10/19 14:46:55 ###########


########## Tcl recorder starts at 03/26/24 10:19:59 ##########

set version "2.0"
set proj_dir "D:/Git/aladdin-xt-cpld/2MB_LPCmod_OSSupport_MosfetD0"
cd $proj_dir

# Get directory paths
set pver $version
regsub -all {\.} $pver {_} pver
set lscfile "lsc_"
append lscfile $pver ".ini"
set lsvini_dir [lindex [array get env LSC_INI_PATH] 1]
set lsvini_path [file join $lsvini_dir $lscfile]
if {[catch {set fid [open $lsvini_path]} msg]} {
	 puts "File Open Error: $lsvini_path"
	 return false
} else {set data [read $fid]; close $fid }
foreach line [split $data '\n'] { 
	set lline [string tolower $line]
	set lline [string trim $lline]
	if {[string compare $lline "\[paths\]"] == 0} { set path 1; continue}
	if {$path && [regexp {^\[} $lline]} {set path 0; break}
	if {$path && [regexp {^bin} $lline]} {set cpld_bin $line; continue}
	if {$path && [regexp {^fpgapath} $lline]} {set fpga_dir $line; continue}
	if {$path && [regexp {^fpgabinpath} $lline]} {set fpga_bin $line}}

set cpld_bin [string range $cpld_bin [expr [string first "=" $cpld_bin]+1] end]
regsub -all "\"" $cpld_bin "" cpld_bin
set cpld_bin [file join $cpld_bin]
set install_dir [string range $cpld_bin 0 [expr [string first "ispcpld" $cpld_bin]-2]]
regsub -all "\"" $install_dir "" install_dir
set install_dir [file join $install_dir]
set fpga_dir [string range $fpga_dir [expr [string first "=" $fpga_dir]+1] end]
regsub -all "\"" $fpga_dir "" fpga_dir
set fpga_dir [file join $fpga_dir]
set fpga_bin [string range $fpga_bin [expr [string first "=" $fpga_bin]+1] end]
regsub -all "\"" $fpga_bin "" fpga_bin
set fpga_bin [file join $fpga_bin]

if {[string match "*$fpga_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$fpga_bin;$env(PATH)" }

if {[string match "*$cpld_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$cpld_bin;$env(PATH)" }

lappend auto_path [file join $install_dir "ispcpld" "tcltk" "lib" "ispwidget" "runproc"]
package require runcmd

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 10:20:00 ###########


########## Tcl recorder starts at 03/26/24 10:20:00 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 10:20:00 ###########


########## Tcl recorder starts at 03/26/24 10:23:55 ##########

# Commands to make the Process: 
# ISC-1532 File
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2i "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 10:23:55 ###########


########## Tcl recorder starts at 03/26/24 10:24:10 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 10:24:10 ###########


########## Tcl recorder starts at 03/26/24 12:15:04 ##########

# Commands to make the Process: 
# JEDEC File
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 12:15:04 ###########


########## Tcl recorder starts at 03/26/24 12:15:18 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 12:15:18 ###########


########## Tcl recorder starts at 03/26/24 12:15:18 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 12:15:18 ###########


########## Tcl recorder starts at 03/26/24 12:15:40 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 12:15:40 ###########


########## Tcl recorder starts at 03/26/24 12:15:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 12:15:40 ###########


########## Tcl recorder starts at 03/26/24 14:41:15 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:41:15 ###########


########## Tcl recorder starts at 03/26/24 14:43:21 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:43:21 ###########


########## Tcl recorder starts at 03/26/24 14:50:40 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:50:40 ###########


########## Tcl recorder starts at 03/26/24 14:50:40 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:50:40 ###########


########## Tcl recorder starts at 03/26/24 14:55:54 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:55:54 ###########


########## Tcl recorder starts at 03/26/24 14:55:54 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:55:54 ###########


########## Tcl recorder starts at 03/26/24 14:56:43 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:56:43 ###########


########## Tcl recorder starts at 03/26/24 14:56:44 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 14:56:44 ###########


########## Tcl recorder starts at 03/26/24 15:07:18 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 15:07:18 ###########


########## Tcl recorder starts at 03/26/24 15:07:18 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 15:07:18 ###########


########## Tcl recorder starts at 03/26/24 16:48:41 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 16:48:41 ###########


########## Tcl recorder starts at 03/26/24 16:59:24 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 16:59:24 ###########


########## Tcl recorder starts at 03/26/24 16:59:24 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 16:59:24 ###########


########## Tcl recorder starts at 03/26/24 18:45:31 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:45:31 ###########


########## Tcl recorder starts at 03/26/24 18:49:11 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:49:11 ###########


########## Tcl recorder starts at 03/26/24 18:49:12 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:49:12 ###########


########## Tcl recorder starts at 03/26/24 18:54:26 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:54:26 ###########


########## Tcl recorder starts at 03/26/24 18:54:27 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:54:27 ###########


########## Tcl recorder starts at 03/26/24 18:57:47 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:57:47 ###########


########## Tcl recorder starts at 03/26/24 18:57:48 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 18:57:48 ###########


########## Tcl recorder starts at 03/26/24 19:04:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" 2mb_lpcmod.vhd -o 2mb_lpcmod.jhd -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 19:04:00 ###########


########## Tcl recorder starts at 03/26/24 19:04:01 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 19:04:01 ###########


########## Tcl recorder starts at 03/26/24 19:22:52 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/26/24 19:22:52 ###########


########## Tcl recorder starts at 03/27/24 13:51:08 ##########

# Commands to make the Process: 
# JEDEC File
if [catch {open entity_lpcmod.cmd w} rspFile] {
	puts stderr "Cannot create response file entity_lpcmod.cmd: $rspFile"
} else {
	puts $rspFile "STYFILENAME: 2mb_lpcmod_osssupport.sty
PROJECT: entity_lpcmod
WORKING_PATH: \"$proj_dir\"
MODULE: entity_lpcmod
VHDL_FILE_LIST: 2mb_lpcmod.vhd
OUTPUT_FILE_NAME: entity_lpcmod
SUFFIX_NAME: edi
FREQUENCY:  200
FANIN_LIMIT:  20
DISABLE_IO_INSERTION: false
MAX_TERMS_PER_MACROCELL:  16
MAP_LOGIC: false
SYMBOLIC_FSM_COMPILER: true
NUM_CRITICAL_PATHS:   3
AUTO_CONSTRAIN_IO: true
NUM_STARTEND_POINTS:   0
AREADELAY:  0
WRITE_PRF: true
RESOURCE_SHARING: true
COMPILER_COMPATIBLE: true
DEFAULT_ENUM_ENCODING: default
ARRANGE_VHDL_FILES: true
synthesis_onoff_pragma: false
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/Synpwrap\" -e entity_lpcmod -target ispmach4000b -pro "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete entity_lpcmod.cmd
if [runCmd "\"$cpld_bin/edif2blf\" -edf entity_lpcmod.edi -out entity_lpcmod.bl0 -err automake.err -log entity_lpcmod.log -prj 2mb_lpcmod_osssupport -lib \"$install_dir/ispcpld/dat/mach.edn\" -net_Vcc VCC -net_GND GND -nbx -dse -tlw -cvt YES -xor"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" entity_lpcmod.bl0 -collapse none -reduce none -keepwires  -err automake.err -family"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblflink\" \"entity_lpcmod.bl1\" -o \"2mb_lpcmod_osssupport.bl2\" -omod \"2mb_lpcmod_osssupport\"  -err \"automake.err\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/impsrc\"  -prj 2mb_lpcmod_osssupport -lci 2mb_lpcmod_osssupport.lct -log 2mb_lpcmod_osssupport.imp -err automake.err -tti 2mb_lpcmod_osssupport.bl2 -dir $proj_dir"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -blifopt 2mb_lpcmod_osssupport.b2_"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mblifopt\" 2mb_lpcmod_osssupport.bl2 -sweep -mergefb -err automake.err -o 2mb_lpcmod_osssupport.bl3 @2mb_lpcmod_osssupport.b2_ "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -diofft 2mb_lpcmod_osssupport.d0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/mdiofft\" 2mb_lpcmod_osssupport.bl3 -family AMDMACH -idev van -o 2mb_lpcmod_osssupport.bl4 -oxrf 2mb_lpcmod_osssupport.xrf -err automake.err @2mb_lpcmod_osssupport.d0 "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/abelvci\" -vci 2mb_lpcmod_osssupport.lct -dev lc4k -prefit 2mb_lpcmod_osssupport.l0"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/prefit\" -blif -inp 2mb_lpcmod_osssupport.bl4 -out 2mb_lpcmod_osssupport.bl5 -err automake.err -log 2mb_lpcmod_osssupport.log -mod entity_lpcmod @2mb_lpcmod_osssupport.l0  -sc"] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [catch {open 2mb_lpcmod_osssupport.rs1 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs1: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -nojed -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [catch {open 2mb_lpcmod_osssupport.rs2 w} rspFile] {
	puts stderr "Cannot create response file 2mb_lpcmod_osssupport.rs2: $rspFile"
} else {
	puts $rspFile "-i 2mb_lpcmod_osssupport.bl5 -lci 2mb_lpcmod_osssupport.lct -d m4s_32_30 -lco 2mb_lpcmod_osssupport.lco -html_rpt -fti 2mb_lpcmod_osssupport.fti -fmt PLA -tto 2mb_lpcmod_osssupport.tt4 -eqn 2mb_lpcmod_osssupport.eq3 -tmv NoInput.tmv
-rpt_num 1
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/lpf4k\" \"@2mb_lpcmod_osssupport.rs2\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete 2mb_lpcmod_osssupport.rs1
file delete 2mb_lpcmod_osssupport.rs2
if [runCmd "\"$cpld_bin/tda\" -i 2mb_lpcmod_osssupport.bl5 -o 2mb_lpcmod_osssupport.tda -lci 2mb_lpcmod_osssupport.lct -dev m4s_32_30 -family lc4k -mod entity_lpcmod -ovec NoInput.tmv -err tda.err "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
if [runCmd "\"$cpld_bin/synsvf\" -exe \"$install_dir/ispvmsystem/ispufw\" -prj 2mb_lpcmod_osssupport -if 2mb_lpcmod_osssupport.jed -j2s -log 2mb_lpcmod_osssupport.svl "] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 03/27/24 13:51:08 ###########

